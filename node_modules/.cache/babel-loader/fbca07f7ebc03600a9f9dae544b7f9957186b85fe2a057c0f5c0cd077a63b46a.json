{"ast":null,"code":"var _jsxFileName = \"/Users/macair/Documents/GitHub/chat-climate-game/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport '@chatscope/chat-ui-kit-styles/dist/default/styles.min.css';\nimport { MainContainer, ChatContainer, MessageList, Message, MessageInput, TypingIndicator } from '@chatscope/chat-ui-kit-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [prompt35, setPrompt35] = useState('');\n  const [message35, setMessage35] = useState('');\n  var gptReturn = \"\";\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const apiKey = \"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\";\n    const data = {\n      model: \"gpt-3.5-turbo\",\n      messages: [{\n        role: 'user',\n        content: prompt\n      }]\n    };\n    const headers = {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${apiKey}`\n    };\n    const url = 'https://api.openai.com/v1/chat/completions';\n    try {\n      const completion = await axios.post(url, data, {\n        headers\n      });\n      console.log(completion.data);\n      setMessage(completion.data.choices[0].message.content);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const askGPT35 = async () => {\n    // event.preventDefault();\n    const apiKey = \"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\";\n    const data = {\n      model: \"gpt-3.5-turbo\",\n      messages: [{\n        role: 'user',\n        content: prompt35\n      }]\n    };\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      'Authorization': `Bearer ${apiKey}`\n    };\n    const url = 'https://api.openai.com/v1/chat/completions';\n    try {\n      const completion = await axios.post(url, data, {\n        headers\n      });\n      console.log(completion.data);\n      gptReturn = completion.data.choices[0].message.content;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const askGPT = async input => {\n    const apiKey = \"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\";\n    const data = {\n      model: 'text-davinci-003',\n      prompt: input,\n      max_tokens: 50,\n      temperature: 0.5\n    };\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      'Authorization': `Bearer ${apiKey}`\n    };\n    const url = 'https://api.openai.com/v1/completions';\n    try {\n      const completion = await axios.post(url, data, {\n        headers\n      });\n      gptReturn = completion.data.choices[0].text;\n      // console.log(completion.data.choices[0].text);\n      console.log(gptReturn);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const CustomComponent = props => {\n    setPrompt35(props.steps.query.value);\n    console.log(\"set Prompt35..\" + props.steps.query.value);\n    askGPT35();\n    console.log(props.steps.query.value);\n    // return (<div>This is what you have type {props.steps.query.value} : {gptReturn} </div>)\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [gptReturn, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this);\n  };\n  const step = [{\n    id: \"1\",\n    message: \"Hello?\",\n    trigger: \"query\"\n  }, {\n    id: \"query\",\n    user: true,\n    trigger: \"3\"\n  }, {\n    id: \"3\",\n    component: /*#__PURE__*/_jsxDEV(CustomComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 18\n    }, this),\n    // Mention Custom component here\n\n    asMessage: true,\n    trigger: \"query\"\n  }];\n  const [count, setCount] = useState(0);\n  const [typing, setTyping] = useState(false);\n  const [messages, setMessages] = useState([{\n    message: \"Hello, I am ChatGPT! Please ask me anything.\",\n    sender: \"ChatGPT\",\n    direction: \"ingoing\"\n  }]);\n  const handleSend = async message => {\n    const newMessage = {\n      message: message,\n      sender: \"user\",\n      direction: \"outgoing\"\n    };\n\n    // new array of messages\n    const newMessages = [...messages, newMessage]; // all the old messages, + the new messages \n\n    //update our messages state\n    setMessages(newMessages);\n\n    //set a typing indicator (chatgpt is typing...)\n    setTyping(true);\n    //process message to chatGPT (send it over and see reponse)\n\n    await processMessageToChatGPT(newMessages);\n  };\n  async function processMessageToChatGPT(chatMessages) {\n    //chatMessages { sender: \"user\" or \"ChatGPT\", message: \"The message content here\"}\n    //apiMessages {role: \"user\" or \"assistant\", content: \"The message content here\"}\n\n    let apiMessages = chatMessages.map(messageObject => {\n      let role = \"\";\n      if (messageObject.sender === \"ChatGPT\") {\n        role = \"assistant\";\n      } else {\n        role = \"user\";\n      }\n      return {\n        role: role,\n        content: messageObject.message\n      };\n    });\n\n    //role: \"user\" -> a message from the user, \"assistant -> a response from chatGPT\"\n    // \"system\" -> generally one initial message defining HOW we want chatgpt to talk\n\n    const systemMessage = {\n      role: \"system\",\n      content: \"Explain all concepts like I am a narrator for a digital game.\"\n    };\n    const apiRequestBody = {\n      \"model\": \"gpt-3.5-turbo\",\n      \"messages\": [systemMessage, ...apiMessages // [message1, message2, message3]\n      ]\n    };\n\n    const apiKey = \"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\";\n    await fetch(\"https://api.openai.com/v1/chat/completions\", {\n      method: \"POST\",\n      headers: {\n        'Authorization': `Bearer ${apiKey}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(apiRequestBody)\n    }).then(data => {\n      return data.json();\n    }).then(data => {\n      console.log(data.choices[0].message.content);\n      setMessages([...chatMessages, {\n        message: data.choices[0].message.content,\n        sender: \"ChatGPT\"\n      }]);\n      setTyping(false);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        height: \"800px\",\n        width: \"700px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MainContainer, {\n        children: /*#__PURE__*/_jsxDEV(ChatContainer, {\n          children: [/*#__PURE__*/_jsxDEV(MessageList, {\n            typingIndicator: typing ? /*#__PURE__*/_jsxDEV(TypingIndicator, {\n              content: \"ChatGPT is typing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 52\n            }, this) : null,\n            children: messages.map((message, i) => {\n              return /*#__PURE__*/_jsxDEV(Message, {\n                model: message\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 24\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n            placeholder: \"Type message here\",\n            onSend: handleSend\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Prompt:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: prompt,\n            onChange: event => setPrompt(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"+mW9QIikBJrh679H/E4Z8oPZEYE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","MainContainer","ChatContainer","MessageList","Message","MessageInput","TypingIndicator","jsxDEV","_jsxDEV","App","_s","message","setMessage","prompt35","setPrompt35","message35","setMessage35","gptReturn","handleSubmit","event","preventDefault","apiKey","data","model","messages","role","content","prompt","headers","url","completion","post","console","log","choices","error","askGPT35","askGPT","input","max_tokens","temperature","text","CustomComponent","props","steps","query","value","children","fileName","_jsxFileName","lineNumber","columnNumber","step","id","trigger","user","component","asMessage","count","setCount","typing","setTyping","setMessages","sender","direction","handleSend","newMessage","newMessages","processMessageToChatGPT","chatMessages","apiMessages","map","messageObject","systemMessage","apiRequestBody","fetch","method","body","JSON","stringify","then","json","style","position","height","width","typingIndicator","i","placeholder","onSend","onSubmit","type","onChange","setPrompt","target","_c","$RefreshReg$"],"sources":["/Users/macair/Documents/GitHub/chat-climate-game/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport '@chatscope/chat-ui-kit-styles/dist/default/styles.min.css';\nimport { MainContainer, ChatContainer, MessageList, Message, MessageInput, TypingIndicator } from '@chatscope/chat-ui-kit-react';\n\n\n\n\n\nconst App = () => {\n \n\n\n  const [message, setMessage] = useState('');\n\n\n\n  const [prompt35, setPrompt35] = useState('');\n  const [message35, setMessage35] = useState('');\n\n\n\n\n  var gptReturn = \"\";\n\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const apiKey = \"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\";\n    const data = {\n      model: \"gpt-3.5-turbo\",\n      messages: [{ role: 'user', content: prompt }],\n    };\n    const headers = {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${apiKey}`\n    };\n    const url = 'https://api.openai.com/v1/chat/completions';\n\n    try {\n      const completion = await axios.post(url, data, { headers });\n      console.log(completion.data);\n      setMessage(completion.data.choices[0].message.content);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n\n\n  const askGPT35 = async () => {\n    // event.preventDefault();\n    const apiKey = \"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\";\n    const data = {\n      model: \"gpt-3.5-turbo\",\n      messages: [{ role: 'user', content: prompt35 }],\n    };\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      'Authorization': `Bearer ${apiKey}`\n    };\n    const url = 'https://api.openai.com/v1/chat/completions';\n\n    try {\n      const completion = await axios.post(url, data, { headers });\n      console.log(completion.data);\n      gptReturn = completion.data.choices[0].message.content;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n\n\n\n  const askGPT = async (input) => {\n    const apiKey = \"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\";\n    const data = {\n      model: 'text-davinci-003',\n      prompt: input,\n      max_tokens: 50,\n      temperature: 0.5\n    };\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      'Authorization': `Bearer ${apiKey}`\n    };\n    const url = 'https://api.openai.com/v1/completions';\n\n    try {\n      const completion = await axios.post(url, data, { headers });\n      gptReturn = completion.data.choices[0].text;\n      // console.log(completion.data.choices[0].text);\n      console.log(gptReturn);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n\n\n  const CustomComponent = (props) => {\n\n\n    setPrompt35(props.steps.query.value);\n    console.log(\"set Prompt35..\" + props.steps.query.value);\n\n    askGPT35();\n    console.log(props.steps.query.value);\n    // return (<div>This is what you have type {props.steps.query.value} : {gptReturn} </div>)\n    return (<div>{gptReturn} </div>)\n\n\n  }\n\n\n\n  const step = [\n    {\n      id: \"1\",\n      message: \"Hello?\",\n      trigger: \"query\",\n    },\n    {\n      id: \"query\",\n      user: true,\n      trigger: \"3\",\n    },\n    {\n      id: \"3\",\n      component: <CustomComponent />, // Mention Custom component here\n\n      asMessage: true,\n      trigger: \"query\",\n    },\n\n  ];\n\n\n\n  const [count, setCount] = useState(0);\n\n\n  const [typing, setTyping] = useState(false);\n\n  const [messages, setMessages] = useState([\n    {\n      message: \"Hello, I am ChatGPT! Please ask me anything.\",\n      sender: \"ChatGPT\",\n      direction: \"ingoing\",\n\n    },\n \n  ]);\n\n\n  const handleSend = async (message) => {\n    const newMessage = {\n      message: message,\n      sender: \"user\",\n      direction: \"outgoing\",\n    }\n\n    // new array of messages\n    const newMessages = [...messages, newMessage]; // all the old messages, + the new messages \n\n    //update our messages state\n    setMessages(newMessages);\n\n    //set a typing indicator (chatgpt is typing...)\n    setTyping(true);\n    //process message to chatGPT (send it over and see reponse)\n\n    await processMessageToChatGPT(newMessages);\n\n  }\n\n  async function processMessageToChatGPT(chatMessages) {\n    //chatMessages { sender: \"user\" or \"ChatGPT\", message: \"The message content here\"}\n    //apiMessages {role: \"user\" or \"assistant\", content: \"The message content here\"}\n\n    let apiMessages = chatMessages.map((messageObject) => {\n      let role = \"\";\n      if (messageObject.sender === \"ChatGPT\") {\n        role = \"assistant\"\n      } else {\n        role = \"user\"\n      }\n      return { role: role, content: messageObject.message }\n    });\n\n    //role: \"user\" -> a message from the user, \"assistant -> a response from chatGPT\"\n    // \"system\" -> generally one initial message defining HOW we want chatgpt to talk\n\n    const systemMessage = {\n      role: \"system\",\n      content: \"Explain all concepts like I am a narrator for a digital game.\"\n    }\n\n    const apiRequestBody = {\n      \"model\": \"gpt-3.5-turbo\",\n      \"messages\": [\n        systemMessage,\n        ...apiMessages // [message1, message2, message3]\n      ]\n    }\n\n    const apiKey = \"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\";\n\n\n    await fetch(\"https://api.openai.com/v1/chat/completions\", {\n      method: \"POST\",\n      headers: {\n        'Authorization': `Bearer ${apiKey}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(apiRequestBody)\n    }).then((data) => {\n      return data.json();\n    }).then((data) => {\n      console.log(data.choices[0].message.content);\n      setMessages(\n        [...chatMessages, {\n          message: data.choices[0].message.content,\n          sender: \"ChatGPT\"\n        }]\n      );\n      setTyping(false);\n    })\n  }\n\n\n\n  return (\n    <div>\n\n      <div style={{ position: \"relative\", height: \"800px\", width: \"700px\" }}>\n\n        <MainContainer>\n          <ChatContainer>\n            <MessageList typingIndicator={typing ? <TypingIndicator content=\"ChatGPT is typing\" /> : null}>\n              {messages.map((message, i) => {\n                return <Message key={i} model={message} />\n              })}\n            </MessageList>\n            <MessageInput placeholder='Type message here' onSend={handleSend} />\n          </ChatContainer>\n        </MainContainer>\n\n      </div>\n\n\n\n\n      <div>\n        <form onSubmit={handleSubmit}>\n          <label>\n            Prompt:\n            <input type=\"text\" value={prompt} onChange={(event) => setPrompt(event.target.value)} />\n          </label>\n          <button type=\"submit\">Submit</button>\n        </form>\n        {message && (\n          <div>\n            <p>{message}</p>\n          </div>\n        )}\n      </div>\n\n\n\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}