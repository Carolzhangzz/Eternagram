{"ast":null,"code":"var _jsxFileName = \"/Users/macair/Documents/GitHub/chat-climate-game/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport openai from 'openai';\nimport ChatBot from 'react-simple-chatbot';\nimport { Segment } from 'semantic-ui-react';\nimport { ThemeProvider } from \"styled-components\";\nimport '@chatscope/chat-ui-kit-styles/dist/default/styles.min.css';\nimport { MainContainer, ChatContainer, MessageList, Message, MessageInput, TypingIndicator } from '@chatscope/chat-ui-kit-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"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\";\n\n// Creating our own theme\nconst theme = {\n  background: '#C9FF8F',\n  headerBgColor: '#197B22',\n  headerFontSize: '20px',\n  botBubbleColor: '#0F3789',\n  headerFontColor: 'white',\n  botFontColor: 'white',\n  userBubbleColor: '#FF5733',\n  userFontColor: 'white'\n};\n\n// Set some properties of the bot\nconst config = {\n  botAvatar: \"img.png\",\n  floating: true\n};\nconst App = () => {\n  _s();\n  //new ChatGPT API\n  // const apiKey = \"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\";\n  // const data = {\n  //   model: 'text-davinci-003',\n  //   prompt: 'Say this is a test',\n  //   temperature: 0,\n  //   max_tokens: 1000\n  // };\n  // const headers = {\n  //   'Content-Type': 'application/json',\n  //   'Authorization': `Bearer ${apiKey}`\n  // };\n  // const url = 'https://api.openai.com/v1/completions';\n\n  const [prompt, setPrompt] = useState('Say this is a test');\n  const [message, setMessage] = useState('');\n  const [gptfeed, setGptfeed] = useState('');\n  const [prompt35, setPrompt35] = useState('');\n  const [message35, setMessage35] = useState('');\n  var gptReturn = \"\";\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const apiKey = \"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\";\n    const data = {\n      model: \"gpt-3.5-turbo\",\n      messages: [{\n        role: 'user',\n        content: prompt\n      }]\n    };\n    const headers = {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${apiKey}`\n    };\n    const url = 'https://api.openai.com/v1/chat/completions';\n    try {\n      const completion = await axios.post(url, data, {\n        headers\n      });\n      console.log(completion.data);\n      setMessage(completion.data.choices[0].message.content);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const askGPT35 = async () => {\n    // event.preventDefault();\n    const apiKey = \"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\";\n    const data = {\n      model: \"gpt-3.5-turbo\",\n      messages: [{\n        role: 'user',\n        content: prompt35\n      }]\n    };\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      'Authorization': `Bearer ${apiKey}`\n    };\n    const url = 'https://api.openai.com/v1/chat/completions';\n    try {\n      const completion = await axios.post(url, data, {\n        headers\n      });\n      console.log(completion.data);\n      gptReturn = completion.data.choices[0].message.content;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const askGPT = async input => {\n    const apiKey = \"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\";\n    const data = {\n      model: 'text-davinci-003',\n      prompt: input,\n      max_tokens: 50,\n      temperature: 0.5\n    };\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      'Authorization': `Bearer ${apiKey}`\n    };\n    const url = 'https://api.openai.com/v1/completions';\n    try {\n      const completion = await axios.post(url, data, {\n        headers\n      });\n      gptReturn = completion.data.choices[0].text;\n      // console.log(completion.data.choices[0].text);\n      console.log(gptReturn);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const CustomComponent = props => {\n    setPrompt35(props.steps.query.value);\n    console.log(\"set Prompt35..\" + props.steps.query.value);\n    askGPT35();\n    console.log(props.steps.query.value);\n    // return (<div>This is what you have type {props.steps.query.value} : {gptReturn} </div>)\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [gptReturn, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this);\n  };\n  const step = [{\n    id: \"1\",\n    message: \"Hello?\",\n    trigger: \"query\"\n  }, {\n    id: \"query\",\n    user: true,\n    trigger: \"3\"\n  }, {\n    id: \"3\",\n    component: /*#__PURE__*/_jsxDEV(CustomComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 18\n    }, this),\n    // Mention Custom component here\n\n    asMessage: true,\n    trigger: \"query\"\n  }];\n  const [count, setCount] = useState(0);\n  const [typing, setTyping] = useState(false);\n  const [messages, setMessages] = useState([{\n    message: \"Hello, I am ChatGPT!\",\n    sender: \"ChatGPT\",\n    direction: \"ingoing\"\n  }, {\n    message: \"Hello, Hello!\",\n    sender: \"ChatGPT\",\n    direction: \"outgoing\"\n  }]);\n  const handleSend = async message => {\n    const newMessage = {\n      message: message,\n      sender: \"user\",\n      direction: \"outgoing\"\n    };\n\n    // new array of messages\n    const newMessages = [...messages, newMessage]; // all the old messages, + the new messages \n\n    //update our messages state\n    setMessages(newMessages);\n\n    //set a typing indicator (chatgpt is typing...)\n    setTyping(true);\n    //process message to chatGPT (send it over and see reponse)\n\n    await processMessageToChatGPT(newMessages);\n  };\n  async function processMessageToChatGPT(chatMessages) {\n    //chatMessages { sender: \"user\" or \"ChatGPT\", message: \"The message content here\"}\n    //apiMessages {role: \"user\" or \"assistant\", content: \"The message content here\"}\n\n    let apiMessages = chatMessages.map(messageObject => {\n      let role = \"\";\n      if (messageObject.sender === \"ChatGPT\") {\n        role = \"assistant\";\n      } else {\n        role = \"user\";\n      }\n      return {\n        role: role,\n        content: messageObject.message\n      };\n    });\n\n    //role: \"user\" -> a message from the user, \"assistant -> a response from chatGPT\"\n    // \"system\" -> generally one initial message defining HOW we want chatgpt to talk\n\n    const systemMessage = {\n      role: \"system\",\n      content: \"Explain all concepts like I am a narrator for a digital game.\"\n    };\n    const apiRequestBody = {\n      \"model\": \"gpt-3.5-turbo\",\n      \"messages\": [...apiMessages // [message1, message2, message3]\n      ]\n    };\n\n    const apiKey = \"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\";\n    await fetch(\"https://api.openai.com/v1/chat/completions\", {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": \"Bearer\" + apiKey,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(apiRequestBody)\n    }).then(data => {\n      return data.json();\n    }).then(data => {\n      console.log(data);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        height: \"800px\",\n        width: \"700px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MainContainer, {\n        children: /*#__PURE__*/_jsxDEV(ChatContainer, {\n          children: [/*#__PURE__*/_jsxDEV(MessageList, {\n            typingIndicator: typing ? /*#__PURE__*/_jsxDEV(TypingIndicator, {\n              content: \"ChatGPT is typing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 52\n            }, this) : null,\n            children: messages.map((message, i) => {\n              return /*#__PURE__*/_jsxDEV(Message, {\n                model: message\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 24\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n            placeholder: \"Type message here\",\n            onSend: handleSend\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Prompt:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: prompt,\n            onChange: event => setPrompt(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"re8fOKifkpRZIgT8MEHgqDJIY08=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","openai","ChatBot","Segment","ThemeProvider","MainContainer","ChatContainer","MessageList","Message","MessageInput","TypingIndicator","jsxDEV","_jsxDEV","API_KEY","theme","background","headerBgColor","headerFontSize","botBubbleColor","headerFontColor","botFontColor","userBubbleColor","userFontColor","config","botAvatar","floating","App","_s","prompt","setPrompt","message","setMessage","gptfeed","setGptfeed","prompt35","setPrompt35","message35","setMessage35","gptReturn","handleSubmit","event","preventDefault","apiKey","data","model","messages","role","content","headers","url","completion","post","console","log","choices","error","askGPT35","askGPT","input","max_tokens","temperature","text","CustomComponent","props","steps","query","value","children","fileName","_jsxFileName","lineNumber","columnNumber","step","id","trigger","user","component","asMessage","count","setCount","typing","setTyping","setMessages","sender","direction","handleSend","newMessage","newMessages","processMessageToChatGPT","chatMessages","apiMessages","map","messageObject","systemMessage","apiRequestBody","fetch","method","body","JSON","stringify","then","json","style","position","height","width","typingIndicator","i","placeholder","onSend","onSubmit","type","onChange","target","_c","$RefreshReg$"],"sources":["/Users/macair/Documents/GitHub/chat-climate-game/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport openai from 'openai';\n\nimport ChatBot from 'react-simple-chatbot';\nimport { Segment } from 'semantic-ui-react';\nimport { ThemeProvider } from \"styled-components\";\n\nimport '@chatscope/chat-ui-kit-styles/dist/default/styles.min.css';\nimport { MainContainer, ChatContainer, MessageList, Message, MessageInput, TypingIndicator } from '@chatscope/chat-ui-kit-react';\n\nconst API_KEY = \"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\";\n\n\n\n// Creating our own theme\nconst theme = {\n  background: '#C9FF8F',\n  headerBgColor: '#197B22',\n  headerFontSize: '20px',\n  botBubbleColor: '#0F3789',\n  headerFontColor: 'white',\n  botFontColor: 'white',\n  userBubbleColor: '#FF5733',\n  userFontColor: 'white',\n};\n\n\n// Set some properties of the bot\nconst config = {\n  botAvatar: \"img.png\",\n  floating: true,\n};\n\n\n\n\n\nconst App = () => {\n  //new ChatGPT API\n  // const apiKey = \"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\";\n  // const data = {\n  //   model: 'text-davinci-003',\n  //   prompt: 'Say this is a test',\n  //   temperature: 0,\n  //   max_tokens: 1000\n  // };\n  // const headers = {\n  //   'Content-Type': 'application/json',\n  //   'Authorization': `Bearer ${apiKey}`\n  // };\n  // const url = 'https://api.openai.com/v1/completions';\n\n\n\n  const [prompt, setPrompt] = useState('Say this is a test');\n\n\n  const [message, setMessage] = useState('');\n\n  const [gptfeed, setGptfeed] = useState('');\n\n\n\n  const [prompt35, setPrompt35] = useState('');\n  const [message35, setMessage35] = useState('');\n\n\n\n\n  var gptReturn = \"\";\n\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const apiKey = \"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\";\n    const data = {\n      model: \"gpt-3.5-turbo\",\n      messages: [{ role: 'user', content: prompt }],\n    };\n    const headers = {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${apiKey}`\n    };\n    const url = 'https://api.openai.com/v1/chat/completions';\n\n    try {\n      const completion = await axios.post(url, data, { headers });\n      console.log(completion.data);\n      setMessage(completion.data.choices[0].message.content);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n\n\n  const askGPT35 = async () => {\n    // event.preventDefault();\n    const apiKey = \"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\";\n    const data = {\n      model: \"gpt-3.5-turbo\",\n      messages: [{ role: 'user', content: prompt35 }],\n    };\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      'Authorization': `Bearer ${apiKey}`\n    };\n    const url = 'https://api.openai.com/v1/chat/completions';\n\n    try {\n      const completion = await axios.post(url, data, { headers });\n      console.log(completion.data);\n      gptReturn = completion.data.choices[0].message.content;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n\n\n\n  const askGPT = async (input) => {\n    const apiKey = \"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\";\n    const data = {\n      model: 'text-davinci-003',\n      prompt: input,\n      max_tokens: 50,\n      temperature: 0.5\n    };\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      'Authorization': `Bearer ${apiKey}`\n    };\n    const url = 'https://api.openai.com/v1/completions';\n\n    try {\n      const completion = await axios.post(url, data, { headers });\n      gptReturn = completion.data.choices[0].text;\n      // console.log(completion.data.choices[0].text);\n      console.log(gptReturn);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n\n\n  const CustomComponent = (props) => {\n\n\n    setPrompt35(props.steps.query.value);\n    console.log(\"set Prompt35..\" + props.steps.query.value);\n\n    askGPT35();\n    console.log(props.steps.query.value);\n    // return (<div>This is what you have type {props.steps.query.value} : {gptReturn} </div>)\n    return (<div>{gptReturn} </div>)\n\n\n  }\n\n\n\n  const step = [\n    {\n      id: \"1\",\n      message: \"Hello?\",\n      trigger: \"query\",\n    },\n    {\n      id: \"query\",\n      user: true,\n      trigger: \"3\",\n    },\n    {\n      id: \"3\",\n      component: <CustomComponent />, // Mention Custom component here\n\n      asMessage: true,\n      trigger: \"query\",\n    },\n\n  ];\n\n\n\n  const [count, setCount] = useState(0);\n\n\n  const [typing, setTyping] = useState(false);\n\n  const [messages, setMessages] = useState([\n    {\n      message: \"Hello, I am ChatGPT!\",\n      sender: \"ChatGPT\",\n      direction: \"ingoing\",\n\n    },\n    {\n      message: \"Hello, Hello!\",\n      sender: \"ChatGPT\",\n      direction: \"outgoing\",\n    },\n\n  ]);\n\n\n  const handleSend = async (message) => {\n    const newMessage = {\n      message: message,\n      sender: \"user\",\n      direction: \"outgoing\",\n    }\n\n    // new array of messages\n    const newMessages = [...messages, newMessage]; // all the old messages, + the new messages \n\n    //update our messages state\n    setMessages(newMessages);\n\n    //set a typing indicator (chatgpt is typing...)\n    setTyping(true);\n    //process message to chatGPT (send it over and see reponse)\n\n    await processMessageToChatGPT(newMessages);\n\n  }\n\n  async function processMessageToChatGPT(chatMessages) {\n    //chatMessages { sender: \"user\" or \"ChatGPT\", message: \"The message content here\"}\n    //apiMessages {role: \"user\" or \"assistant\", content: \"The message content here\"}\n\n    let apiMessages = chatMessages.map((messageObject) => {\n      let role = \"\";\n      if (messageObject.sender === \"ChatGPT\") {\n        role = \"assistant\"\n      } else {\n        role = \"user\"\n      }\n      return { role: role, content: messageObject.message }\n    });\n\n    //role: \"user\" -> a message from the user, \"assistant -> a response from chatGPT\"\n    // \"system\" -> generally one initial message defining HOW we want chatgpt to talk\n\n    const systemMessage = {\n      role: \"system\",\n      content: \"Explain all concepts like I am a narrator for a digital game.\"\n    }\n\n    const apiRequestBody = {\n      \"model\": \"gpt-3.5-turbo\",\n      \"messages\": [\n        ...apiMessages // [message1, message2, message3]\n      ]\n    }\n\n    const apiKey = \"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\";\n\n\n    await fetch(\"https://api.openai.com/v1/chat/completions\", {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": \"Bearer\" + apiKey,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(apiRequestBody)\n    }).then((data) => {\n      return data.json();\n    }).then((data) => {\n      console.log(data);\n    })\n  }\n\n\n\n  return (\n    <div>\n\n      <div style={{ position: \"relative\", height: \"800px\", width: \"700px\" }}>\n\n        <MainContainer>\n          <ChatContainer>\n            <MessageList typingIndicator={typing ? <TypingIndicator content=\"ChatGPT is typing\" /> : null}>\n              {messages.map((message, i) => {\n                return <Message key={i} model={message} />\n              })}\n            </MessageList>\n            <MessageInput placeholder='Type message here' onSend={handleSend} />\n          </ChatContainer>\n        </MainContainer>\n\n      </div>\n\n\n\n\n      <div>\n        <form onSubmit={handleSubmit}>\n          <label>\n            Prompt:\n            <input type=\"text\" value={prompt} onChange={(event) => setPrompt(event.target.value)} />\n          </label>\n          <button type=\"submit\">Submit</button>\n        </form>\n        {message && (\n          <div>\n            <p>{message}</p>\n          </div>\n        )}\n      </div>\n\n\n\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}