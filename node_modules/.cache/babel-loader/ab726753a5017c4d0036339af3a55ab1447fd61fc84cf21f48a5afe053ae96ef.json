{"ast":null,"code":"var _jsxFileName = \"/Users/macair/Desktop/chatbot_game/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { render } from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst express = require(\"express\");\nconst cors = require(\"cors\");\nconst bodyParser = require(\"body-parser\");\nconst {\n  Configuration,\n  OpenAIApi\n} = require(\"openai\");\nconst config = new Configuration({\n  apiKey: \"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\"\n});\nconst openai = new OpenAIApi(config);\n\n// setup Server\nconst app = express();\napp.use(bodyParser.json());\napp.use(cors());\napp.post(\"/chat\", async (req, res) => {\n  const {\n    prompt\n  } = req.body;\n  const completion = await openai.createCopmletion({\n    model: \"text-davinci-003\",\n    max_toekns: 512,\n    temperature: 0,\n    prompt: prompt\n  });\n  res.send(completion.data.choices[0].text);\n});\nconst port = 8080;\napp.listen(port, () => {\n  console.log('Server listening on port ${port}');\n});\nrender( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 46,\n  columnNumber: 8\n}, this), document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","render","jsxDEV","_jsxDEV","express","require","cors","bodyParser","Configuration","OpenAIApi","config","apiKey","openai","app","use","json","post","req","res","prompt","body","completion","createCopmletion","model","max_toekns","temperature","send","data","choices","text","port","listen","console","log","fileName","_jsxFileName","lineNumber","columnNumber","document","getElementById"],"sources":["/Users/macair/Desktop/chatbot_game/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { render } from \"react-dom\";\n\n\nconst express = require(\"express\");\nconst cors = require(\"cors\");\nconst bodyParser = require(\"body-parser\");\n\nconst { Configuration, OpenAIApi } = require(\"openai\");\n\nconst config = new Configuration({\n  apiKey: \"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\",\n})\n\nconst openai = new OpenAIApi(config);\n\n// setup Server\nconst app = express();\napp.use(bodyParser.json());\napp.use(cors());\n\napp.post(\"/chat\", async (req, res) => {\n  const { prompt } = req.body;\n  const completion = await openai.createCopmletion({\n    model: \"text-davinci-003\",\n    max_toekns: 512,\n    temperature: 0,\n    prompt: prompt,\n  });\n  res.send(completion.data.choices[0].text);\n})\n\n\nconst port = 8080;\napp.listen(port, () => {\n  console.log('Server listening on port ${port}');\n});\n\n\n\n\nrender(<App />, document.getElementById(\"root\"));\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n\n\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,MAAM,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnC,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAME,UAAU,GAAGF,OAAO,CAAC,aAAa,CAAC;AAEzC,MAAM;EAAEG,aAAa;EAAEC;AAAU,CAAC,GAAGJ,OAAO,CAAC,QAAQ,CAAC;AAEtD,MAAMK,MAAM,GAAG,IAAIF,aAAa,CAAC;EAC/BG,MAAM,EAAE;AACV,CAAC,CAAC;AAEF,MAAMC,MAAM,GAAG,IAAIH,SAAS,CAACC,MAAM,CAAC;;AAEpC;AACA,MAAMG,GAAG,GAAGT,OAAO,EAAE;AACrBS,GAAG,CAACC,GAAG,CAACP,UAAU,CAACQ,IAAI,EAAE,CAAC;AAC1BF,GAAG,CAACC,GAAG,CAACR,IAAI,EAAE,CAAC;AAEfO,GAAG,CAACG,IAAI,CAAC,OAAO,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EACpC,MAAM;IAAEC;EAAO,CAAC,GAAGF,GAAG,CAACG,IAAI;EAC3B,MAAMC,UAAU,GAAG,MAAMT,MAAM,CAACU,gBAAgB,CAAC;IAC/CC,KAAK,EAAE,kBAAkB;IACzBC,UAAU,EAAE,GAAG;IACfC,WAAW,EAAE,CAAC;IACdN,MAAM,EAAEA;EACV,CAAC,CAAC;EACFD,GAAG,CAACQ,IAAI,CAACL,UAAU,CAACM,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC;AAC3C,CAAC,CAAC;AAGF,MAAMC,IAAI,GAAG,IAAI;AACjBjB,GAAG,CAACkB,MAAM,CAACD,IAAI,EAAE,MAAM;EACrBE,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;AACjD,CAAC,CAAC;AAKFhC,MAAM,eAACE,OAAA,CAACJ,GAAG;EAAAmC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QAAG,EAAEC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;;AAKhD;AACA;AACA;AACAvC,eAAe,EAAE;;AAMjB;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}