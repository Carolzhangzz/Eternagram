{"ast":null,"code":"var _jsxFileName = \"/Users/macair/Documents/GitHub/chat-climate-game/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport openai from 'openai';\nimport ChatBot from 'react-simple-chatbot';\nimport { Segment } from 'semantic-ui-react';\nimport { ThemeProvider } from \"styled-components\";\nimport '@chatscope/chat-ui-kit-styles/dist/default/styles.min.css';\nimport { MainContainer, ChatContainer, MessageList, Message, MessageInput, TypingIndicator } from '@chatscope/chat-ui-kit-react';\n\n// Creating our own theme\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = {\n  background: '#C9FF8F',\n  headerBgColor: '#197B22',\n  headerFontSize: '20px',\n  botBubbleColor: '#0F3789',\n  headerFontColor: 'white',\n  botFontColor: 'white',\n  userBubbleColor: '#FF5733',\n  userFontColor: 'white'\n};\n\n// Set some properties of the bot\nconst config = {\n  botAvatar: \"img.png\",\n  floating: true\n};\nconst App = () => {\n  _s();\n  //new ChatGPT API\n  // const apiKey = \"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\";\n  // const data = {\n  //   model: 'text-davinci-003',\n  //   prompt: 'Say this is a test',\n  //   temperature: 0,\n  //   max_tokens: 1000\n  // };\n  // const headers = {\n  //   'Content-Type': 'application/json',\n  //   'Authorization': `Bearer ${apiKey}`\n  // };\n  // const url = 'https://api.openai.com/v1/completions';\n\n  const [prompt, setPrompt] = useState('Say this is a test');\n  const [message, setMessage] = useState('');\n  const [gptfeed, setGptfeed] = useState('');\n  const [prompt35, setPrompt35] = useState('');\n  const [message35, setMessage35] = useState('');\n  var gptReturn = \"\";\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const apiKey = \"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\";\n    const data = {\n      model: \"gpt-3.5-turbo\",\n      messages: [{\n        role: 'user',\n        content: prompt\n      }]\n    };\n    const headers = {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${apiKey}`\n    };\n    const url = 'https://api.openai.com/v1/chat/completions';\n    try {\n      const completion = await axios.post(url, data, {\n        headers\n      });\n      console.log(completion.data);\n      setMessage(completion.data.choices[0].message.content);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const askGPT35 = async () => {\n    // event.preventDefault();\n    const apiKey = \"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\";\n    const data = {\n      model: \"gpt-3.5-turbo\",\n      messages: [{\n        role: 'user',\n        content: prompt35\n      }]\n    };\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      'Authorization': `Bearer ${apiKey}`\n    };\n    const url = 'https://api.openai.com/v1/chat/completions';\n    try {\n      const completion = await axios.post(url, data, {\n        headers\n      });\n      console.log(completion.data);\n      gptReturn = completion.data.choices[0].message.content;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const askGPT = async input => {\n    const apiKey = \"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\";\n    const data = {\n      model: 'text-davinci-003',\n      prompt: input,\n      max_tokens: 50,\n      temperature: 0.5\n    };\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      'Authorization': `Bearer ${apiKey}`\n    };\n    const url = 'https://api.openai.com/v1/completions';\n    try {\n      const completion = await axios.post(url, data, {\n        headers\n      });\n      gptReturn = completion.data.choices[0].text;\n      // console.log(completion.data.choices[0].text);\n      console.log(gptReturn);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const CustomComponent = props => {\n    setPrompt35(props.steps.query.value);\n    console.log(\"set Prompt35..\" + props.steps.query.value);\n    askGPT35();\n    console.log(props.steps.query.value);\n    // return (<div>This is what you have type {props.steps.query.value} : {gptReturn} </div>)\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [gptReturn, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this);\n  };\n  const step = [{\n    id: \"1\",\n    message: \"Hello?\",\n    trigger: \"query\"\n  }, {\n    id: \"query\",\n    user: true,\n    trigger: \"3\"\n  }, {\n    id: \"3\",\n    component: /*#__PURE__*/_jsxDEV(CustomComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 18\n    }, this),\n    // Mention Custom component here\n\n    asMessage: true,\n    trigger: \"query\"\n  }];\n  const [count, setCount] = useState(0);\n  const [messages, setMessages] = useState([{\n    message: \"Hello, I am ChatGPT!\",\n    sender: \"ChatGPT\",\n    direction: \"ingoing\"\n  }, {\n    message: \"Hello, Hello!\",\n    sender: \"ChatGPT\",\n    direction: \"outgoing\"\n  }]);\n  const handleSend = async message => {\n    const newMessage = {\n      message: message,\n      sender: \"user\",\n      direction: \"outgoing\"\n    };\n\n    // new array of messages\n    const newMessages = [...messages, newMessage]; // all the old messages, + the new messages \n\n    //update our messages state\n    setMessages(newMessages);\n\n    //process message to chatGPT (send it over and see reponse)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        height: \"800px\",\n        width: \"700px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MainContainer, {\n        children: /*#__PURE__*/_jsxDEV(ChatContainer, {\n          children: [/*#__PURE__*/_jsxDEV(MessageList, {\n            children: messages.map((message, i) => {\n              return /*#__PURE__*/_jsxDEV(Message, {\n                model: message\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 24\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n            placeholder: \"Type message here\",\n            onSend: handleSend\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Prompt:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: prompt,\n            onChange: event => setPrompt(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"636Ola07cu8demSUk7To2IoCd0I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","openai","ChatBot","Segment","ThemeProvider","MainContainer","ChatContainer","MessageList","Message","MessageInput","TypingIndicator","jsxDEV","_jsxDEV","theme","background","headerBgColor","headerFontSize","botBubbleColor","headerFontColor","botFontColor","userBubbleColor","userFontColor","config","botAvatar","floating","App","_s","prompt","setPrompt","message","setMessage","gptfeed","setGptfeed","prompt35","setPrompt35","message35","setMessage35","gptReturn","handleSubmit","event","preventDefault","apiKey","data","model","messages","role","content","headers","url","completion","post","console","log","choices","error","askGPT35","askGPT","input","max_tokens","temperature","text","CustomComponent","props","steps","query","value","children","fileName","_jsxFileName","lineNumber","columnNumber","step","id","trigger","user","component","asMessage","count","setCount","setMessages","sender","direction","handleSend","newMessage","newMessages","style","position","height","width","map","i","placeholder","onSend","onSubmit","type","onChange","target","_c","$RefreshReg$"],"sources":["/Users/macair/Documents/GitHub/chat-climate-game/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport openai from 'openai';\n\nimport ChatBot from 'react-simple-chatbot';\nimport { Segment } from 'semantic-ui-react';\nimport { ThemeProvider } from \"styled-components\";\n\nimport '@chatscope/chat-ui-kit-styles/dist/default/styles.min.css';\nimport { MainContainer, ChatContainer, MessageList, Message, MessageInput, TypingIndicator } from '@chatscope/chat-ui-kit-react';\n\n\n\n// Creating our own theme\nconst theme = {\n  background: '#C9FF8F',\n  headerBgColor: '#197B22',\n  headerFontSize: '20px',\n  botBubbleColor: '#0F3789',\n  headerFontColor: 'white',\n  botFontColor: 'white',\n  userBubbleColor: '#FF5733',\n  userFontColor: 'white',\n};\n\n\n// Set some properties of the bot\nconst config = {\n  botAvatar: \"img.png\",\n  floating: true,\n};\n\n\n\n\n\nconst App = () => {\n  //new ChatGPT API\n  // const apiKey = \"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\";\n  // const data = {\n  //   model: 'text-davinci-003',\n  //   prompt: 'Say this is a test',\n  //   temperature: 0,\n  //   max_tokens: 1000\n  // };\n  // const headers = {\n  //   'Content-Type': 'application/json',\n  //   'Authorization': `Bearer ${apiKey}`\n  // };\n  // const url = 'https://api.openai.com/v1/completions';\n\n\n\n  const [prompt, setPrompt] = useState('Say this is a test');\n  const [message, setMessage] = useState('');\n\n  const [gptfeed, setGptfeed] = useState('');\n\n\n\n  const [prompt35, setPrompt35] = useState('');\n  const [message35, setMessage35] = useState('');\n\n\n\n\n  var gptReturn = \"\";\n\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const apiKey = \"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\";\n    const data = {\n      model: \"gpt-3.5-turbo\",\n      messages: [{ role: 'user', content: prompt }],\n    };\n    const headers = {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${apiKey}`\n    };\n    const url = 'https://api.openai.com/v1/chat/completions';\n\n    try {\n      const completion = await axios.post(url, data, { headers });\n      console.log(completion.data);\n      setMessage(completion.data.choices[0].message.content);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n\n\n  const askGPT35 = async () => {\n    // event.preventDefault();\n    const apiKey = \"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\";\n    const data = {\n      model: \"gpt-3.5-turbo\",\n      messages: [{ role: 'user', content: prompt35 }],\n    };\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      'Authorization': `Bearer ${apiKey}`\n    };\n    const url = 'https://api.openai.com/v1/chat/completions';\n\n    try {\n      const completion = await axios.post(url, data, { headers });\n      console.log(completion.data);\n      gptReturn = completion.data.choices[0].message.content;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n\n\n\n  const askGPT = async (input) => {\n    const apiKey = \"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\";\n    const data = {\n      model: 'text-davinci-003',\n      prompt: input,\n      max_tokens: 50,\n      temperature: 0.5\n    };\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      'Authorization': `Bearer ${apiKey}`\n    };\n    const url = 'https://api.openai.com/v1/completions';\n\n    try {\n      const completion = await axios.post(url, data, { headers });\n      gptReturn = completion.data.choices[0].text;\n      // console.log(completion.data.choices[0].text);\n      console.log(gptReturn);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n\n\n  const CustomComponent = (props) => {\n\n\n    setPrompt35(props.steps.query.value);\n    console.log(\"set Prompt35..\" + props.steps.query.value);\n\n    askGPT35();\n    console.log(props.steps.query.value);\n    // return (<div>This is what you have type {props.steps.query.value} : {gptReturn} </div>)\n    return (<div>{gptReturn} </div>)\n\n\n  }\n\n\n\n  const step = [\n    {\n      id: \"1\",\n      message: \"Hello?\",\n      trigger: \"query\",\n    },\n    {\n      id: \"query\",\n      user: true,\n      trigger: \"3\",\n    },\n    {\n      id: \"3\",\n      component: <CustomComponent />, // Mention Custom component here\n\n      asMessage: true,\n      trigger: \"query\",\n    },\n\n  ];\n\n\n\n  const [count, setCount] = useState(0);\n  const [messages, setMessages] = useState([\n    {\n      message: \"Hello, I am ChatGPT!\",\n      sender: \"ChatGPT\",\n      direction: \"ingoing\",\n\n    },\n    {\n      message: \"Hello, Hello!\",\n      sender: \"ChatGPT\",\n      direction: \"outgoing\",\n\n    },\n\n  ]);\n\n\n  const handleSend = async (message) => {\n    const newMessage = {\n      message: message, \n      sender: \"user\",\n      direction: \"outgoing\",\n    }\n\n    // new array of messages\n    const newMessages = [...messages, newMessage]; // all the old messages, + the new messages \n\n    //update our messages state\n    setMessages (newMessages);\n\n    //process message to chatGPT (send it over and see reponse)\n  }\n\n\n\n  return (\n    <div>\n\n      <div style={{ position: \"relative\", height: \"800px\", width: \"700px\" }}>\n\n        <MainContainer>\n          <ChatContainer>\n            <MessageList>\n              {messages.map((message, i) => {\n                return <Message key={i} model={message} />\n              })}\n            </MessageList>\n            <MessageInput placeholder='Type message here' onSend={handleSend} />\n          </ChatContainer>\n        </MainContainer>\n\n      </div>\n\n\n\n\n      <div>\n        <form onSubmit={handleSubmit}>\n          <label>\n            Prompt:\n            <input type=\"text\" value={prompt} onChange={(event) => setPrompt(event.target.value)} />\n          </label>\n          <button type=\"submit\">Submit</button>\n        </form>\n        {message && (\n          <div>\n            <p>{message}</p>\n          </div>\n        )}\n      </div>\n\n\n\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}